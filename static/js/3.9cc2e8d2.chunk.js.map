{"version":3,"sources":["store.ts","reportWebVitals.ts","components/Intro.tsx","components/SampleView.tsx","utils.ts","components/SampleSelector.tsx","components/BestSampleView.tsx","components/SampleDataView.tsx","App.tsx","setup.tsx","../../preference-opt-wasm/pkg/preference_opt_wasm_bg.js"],"names":["TState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","newEngine","OptimizationEngine","new_empty","with_same_bounds","Float64Array","useStore","create","set","get","step","engine","state","Initial","savedSamples","loadSampleData","sampleData","prior","f_prior","undefined","get_next_sample","selectSample","idx","other","idx1","idx2","add_preference","bestSample","get_optimal_values","saveCurrentBest","push","setState","toogleHelp","Help","Running","selector","Intro","props","startEvent","useCallback","className","href","target","rel","onClick","SampleView","data","color","x","sample","Array","from","map","o","toFixed","array2color","style","backgroundColor","title","SampleSelector","BestSampleView","active","SampleDataView","sample1","sample2","i","App","ReactDOM","render","StrictMode","document","getElementById","heap","fill","getObject","heap_next","length","takeObject","ret","dropObject","cachedTextDecoder","TextDecoder","module","require","ignoreBOM","fatal","decode","cachegetUint8Memory0","getUint8Memory0","buffer","wasm","Uint8Array","getStringFromWasm0","ptr","len","subarray","addHeapObject","obj","cachegetFloat64Memory0","getFloat64Memory0","WASM_VECTOR_LEN","passArrayF64ToWasm0","arg","malloc","cachegetUint32Memory0","passArray32ToWasm0","Uint32Array","cachegetInt32Memory0","getInt32Memory0","Int32Array","getArrayF64FromWasm0","handleError","f","apply","this","arguments","e","__destroy_into_raw","bounds","ptr0","len0","__wrap","n_init","n_solve","SampleData","preference","retptr","r0","r1","v0","slice","Object","prototype","dims","samples","preferences","ptr1","len1","arg0","__wbg_getRandomValues_57e4008f45f0e105","arg1","getRandomValues","__wbindgen_object_drop_ref","__wbg_randomFillSync_d90848a552cbd666","arg2","randomFillSync","__wbg_self_f865985e662246aa","self","__wbg_static_accessor_MODULE_39947eb3fe77895f","__wbg_require_c59851dfa0dc7e78","__wbg_crypto_bfb05100db79193b","crypto","__wbg_msCrypto_f6dddc6ae048b7e2","msCrypto","__wbindgen_is_undefined","__wbg_buffer_e35e010c3ba9f945","__wbg_length_2cfa674c2a529bc1","__wbg_new_139e70222494b1ff","__wbg_set_d771848e3c7935bb","__wbg_newwithlength_e0c461e90217842c","__wbg_subarray_8a52f1c1a11c02a8","__wbindgen_throw","Error","__wbindgen_memory"],"mappings":"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","file":"static/js/3.9cc2e8d2.chunk.js","sourcesContent":["import create from \"zustand\";\nimport { OptimizationEngine, SampleData } from \"preference-opt-wasm\";\n\nexport enum TState {\n  Initial,\n  Running,\n  Help,\n}\n\nexport type TStore = {\n  step: number;\n  engine: OptimizationEngine;\n  state: TState;\n  sampleData?: SampleData;\n  bestSample?: Float64Array;\n  savedSamples: Float64Array[];\n  loadSampleData: () => void;\n  selectSample: (idx: number) => void;\n  saveCurrentBest: () => void;\n  setState: (state: TState) => void;\n  toogleHelp: () => void;\n};\n\nconst newEngine = () =>\n  OptimizationEngine.new_empty(3).with_same_bounds(new Float64Array([0, 1]));\n\nexport const useStore = create<TStore>((set, get) => ({\n  step: 0,\n  engine: newEngine(),\n  state: TState.Initial,\n  savedSamples: [],\n  loadSampleData: () => {\n    set(({ step, engine, sampleData }) => {\n      // TODO: There is an error when doing many steps\n      const prior = step < 12 ? sampleData?.f_prior() : undefined;\n      return {\n        step: step + 1,\n        sampleData: engine.get_next_sample(50, 1, prior),\n      };\n    });\n  },\n  selectSample: (idx) => {\n    const other =\n      get().sampleData?.idx1 === idx\n        ? get().sampleData?.idx2\n        : get().sampleData?.idx1;\n\n    if (other === undefined) return;\n\n    get().engine.add_preference(idx, other);\n    const bestSample = get().engine.get_optimal_values();\n    set({ bestSample });\n    get().loadSampleData();\n  },\n  saveCurrentBest: () => {\n    let bestSample = get().bestSample;\n    if (bestSample === undefined) return;\n    get().savedSamples.push(bestSample);\n    set({\n      step: 0,\n      engine: newEngine(),\n      bestSample: undefined,\n    });\n    get().loadSampleData();\n  },\n  setState: (state) => set({ state }),\n  toogleHelp: () =>\n    set(({ state }) => ({\n      state: state === TState.Help ? TState.Running : TState.Help,\n    })),\n}));\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { HTMLProps, useCallback } from \"react\";\nimport { TState, TStore, useStore } from \"../store\";\n\nconst selector = ({ loadSampleData, state, setState }: TStore) => ({\n  loadSampleData,\n  state,\n  setState,\n});\n\nexport const Intro: React.FC<HTMLProps<HTMLDivElement>> = ({ ...props }) => {\n  const { loadSampleData, state, setState } = useStore(selector);\n  const startEvent = useCallback(() => {\n    loadSampleData();\n    setState(TState.Running);\n  }, [loadSampleData, setState]);\n\n  return (\n    <div {...props}>\n      {state !== TState.Running ? (\n        <div className=\"mx-auto max-w-2xl flex flex-col text-lg break-words\">\n          <p>\n            This is an example of active preference optimization using the\n            gaussian processes{\" \"}\n            <a\n              href=\"http://mlg.eng.cam.ac.uk/zoubin/papers/icml05chuwei-pl.pdf\"\n              target=\"_black\"\n              rel=\"noopener\"\n            >\n              \"Preference Learning with Gaussian Processes\"\n            </a>\n            . I adapted the python implementation{\" \"}\n            <a href=\"https://github.com/chariff/GPro\">GPro</a> to Rust so it's\n            possible to load it in here using{\" \"}\n            <a href=\"https://webassembly.org/\" target=\"_black\" rel=\"noopener\">\n              Wasm\n            </a>\n            .\n          </p>\n          <p className=\"mt-2\">\n            This is a simple example where you select a group of colours. On\n            each iteration 2 colour samples are shown and you can select which\n            one your prefer. At any point you can choose to keep the current\n            color.\n          </p>\n          <p className=\"mt-4\">\n            You can find the code here:{\" \"}\n            <a\n              href=\"https://github.com/renato145/preference_opt\"\n              target=\"_black\"\n              rel=\"noopener\"\n            >\n              https://github.com/renato145/preference_opt\n            </a>\n            .\n          </p>\n          {state === TState.Initial ? (\n            <button\n              className=\"mt-6 md:mt-12 md:self-center md:px-40 btn-confirm btn-lg\"\n              onClick={startEvent}\n            >\n              Start\n            </button>\n          ) : null}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React, { HTMLProps } from \"react\";\nimport { array2color } from \"../utils\";\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, \"data\"> {\n  data?: Float64Array;\n}\n\nexport const SampleView: React.FC<Props> = ({ data, ...props }) => {\n  const color = data !== undefined ? array2color(data) : undefined;\n  const style = color !== undefined ? { backgroundColor: color } : {};\n  const title = color !== undefined ? color : \"rgb(...)\";\n\n  return (\n    <div {...props}>\n      <p className=\"text-xl font-bold text-center\">{title}</p>\n      <div className=\"mt-1 w-48 h-48 border-4 border-gray-700\" style={style} />\n    </div>\n  );\n};\n","export const array2color = (x: Float64Array) => {\n  const sample = Array.from(x).map((o) => (o * 255).toFixed());\n  return `rgb(${sample})`;\n};\n","import React, { HTMLProps } from \"react\";\nimport { TStore, useStore } from \"../store\";\nimport { SampleView } from \"./SampleView\";\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, \"data\"> {\n  idx: number;\n  data: Float64Array;\n}\n\nconst selector = ({ selectSample }: TStore) => selectSample;\n\nexport const SampleSelector: React.FC<Props> = ({ idx, data, ...props }) => {\n  const selectSample = useStore(selector);\n\n  return (\n    <div {...props}>\n      <div className=\"flex flex-col items-center\">\n        <p className=\"text-xl font-bold\">Sample {idx}</p>\n        <SampleView className=\"mt-1\" data={data} />\n        <button\n          className=\"mt-2 px-4 btn\"\n          onClick={() => selectSample(idx)}\n        >\n          Select this sample\n        </button>\n      </div>\n    </div>\n  );\n};\n","import React, { HTMLProps } from \"react\";\nimport { TStore, useStore } from \"../store\";\nimport { SampleView } from \"./SampleView\";\n\ninterface Props extends Omit<HTMLProps<HTMLDivElement>, \"data\"> {\n  data?: Float64Array;\n  active?: boolean;\n}\n\nconst selector = ({ saveCurrentBest }: TStore) => saveCurrentBest;\n\nexport const BestSampleView: React.FC<Props> = ({\n  data,\n  active = false,\n  ...props\n}) => {\n  const saveCurrentBest = useStore(selector);\n\n  return (\n    <div {...props}>\n      <div className=\"flex flex-col items-center\">\n        <SampleView className=\"mt-1\" data={data} />\n        {active && data !== undefined ? (\n          <button className=\"mt-2 px-4 btn\" onClick={saveCurrentBest}>\n            Keep this!\n          </button>\n        ) : null}\n      </div>\n    </div>\n  );\n};\n","import React, { HTMLProps } from \"react\";\nimport { SampleSelector } from \"./SampleSelector\";\nimport { BestSampleView } from \"./BestSampleView\";\nimport { TStore, useStore } from \"../store\";\n\nconst selector = ({ sampleData, savedSamples, bestSample }: TStore) => ({\n  sampleData,\n  savedSamples,\n  bestSample,\n});\n\nexport const SampleDataView: React.FC<HTMLProps<HTMLDivElement>> = ({\n  ...props\n}) => {\n  const { sampleData, savedSamples, bestSample } = useStore(selector);\n\n  return (\n    <div {...props}>\n      {sampleData !== undefined ? (\n        <div className=\"flex flex-col items-center\">\n          <div className=\"flex justify-around\">\n            <SampleSelector idx={sampleData.idx1} data={sampleData.sample1()} />\n            <SampleSelector\n              className=\"ml-8\"\n              idx={sampleData.idx2}\n              data={sampleData.sample2()}\n            />\n          </div>\n          <div className=\"mt-10 flex flex-wrap justify-center space-x-2\">\n            {savedSamples.map((data, i) => (\n              <BestSampleView key={i} data={data} />\n            ))}\n            <BestSampleView data={bestSample} active />\n          </div>\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Intro } from \"./components/Intro\";\nimport { SampleDataView } from \"./components/SampleDataView\";\nimport { TState, TStore, useStore } from \"./store\";\n\nconst selector = ({ state, toogleHelp }: TStore) => ({ state, toogleHelp });\n\nexport const App = () => {\n  const { state, toogleHelp } = useStore(selector);\n\n  return (\n    <div className=\"container mx-auto px-2 md:px-20 py-5\">\n      <p className=\"text-3xl font-extrabold text-center\">\n        Preference Optimization{\" \"}\n        {state !== TState.Initial ? (\n          <button className=\"btn-link text-lg\" onClick={toogleHelp}>\n            (info)\n          </button>\n        ) : null}\n      </p>\n      <Intro className={ state === TState.Initial ? \"mt-6 md:mt-12\" : \"mt-4\"} />\n      <SampleDataView className=\"mt-10\" />\n    </div>\n  );\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { App } from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as wasm from './preference_opt_wasm_bg.wasm';\n\nconst heap = new Array(32).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 36) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nconst lTextDecoder = typeof TextDecoder === 'undefined' ? (0, module.require)('util').TextDecoder : TextDecoder;\n\nlet cachedTextDecoder = new lTextDecoder('utf-8', { ignoreBOM: true, fatal: true });\n\ncachedTextDecoder.decode();\n\nlet cachegetUint8Memory0 = null;\nfunction getUint8Memory0() {\n    if (cachegetUint8Memory0 === null || cachegetUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachegetUint8Memory0;\n}\n\nfunction getStringFromWasm0(ptr, len) {\n    return cachedTextDecoder.decode(getUint8Memory0().subarray(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nlet cachegetFloat64Memory0 = null;\nfunction getFloat64Memory0() {\n    if (cachegetFloat64Memory0 === null || cachegetFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachegetFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachegetFloat64Memory0;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nfunction passArrayF64ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 8);\n    getFloat64Memory0().set(arg, ptr / 8);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nlet cachegetUint32Memory0 = null;\nfunction getUint32Memory0() {\n    if (cachegetUint32Memory0 === null || cachegetUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachegetUint32Memory0;\n}\n\nfunction passArray32ToWasm0(arg, malloc) {\n    const ptr = malloc(arg.length * 4);\n    getUint32Memory0().set(arg, ptr / 4);\n    WASM_VECTOR_LEN = arg.length;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachegetInt32Memory0 = null;\nfunction getInt32Memory0() {\n    if (cachegetInt32Memory0 === null || cachegetInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachegetInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachegetInt32Memory0;\n}\n\nfunction getArrayF64FromWasm0(ptr, len) {\n    return getFloat64Memory0().subarray(ptr / 8, ptr / 8 + len);\n}\n\nfunction handleError(f) {\n    return function () {\n        try {\n            return f.apply(this, arguments);\n\n        } catch (e) {\n            wasm.__wbindgen_exn_store(addHeapObject(e));\n        }\n    };\n}\n\nfunction getArrayU8FromWasm0(ptr, len) {\n    return getUint8Memory0().subarray(ptr / 1, ptr / 1 + len);\n}\n/**\n*/\nexport class OptimizationEngine {\n\n    static __wrap(ptr) {\n        const obj = Object.create(OptimizationEngine.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_optimizationengine_free(ptr);\n    }\n    /**\n    * @param {number} dims\n    * @returns {OptimizationEngine}\n    */\n    static new_empty(dims) {\n        var ret = wasm.optimizationengine_new_empty(dims);\n        return OptimizationEngine.__wrap(ret);\n    }\n    /**\n    * @param {Float64Array} samples\n    * @param {Uint32Array} preferences\n    * @param {number} dims\n    * @returns {OptimizationEngine}\n    */\n    static new(samples, preferences, dims) {\n        var ptr0 = passArrayF64ToWasm0(samples, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ptr1 = passArray32ToWasm0(preferences, wasm.__wbindgen_malloc);\n        var len1 = WASM_VECTOR_LEN;\n        var ret = wasm.optimizationengine_new(ptr0, len0, ptr1, len1, dims);\n        return OptimizationEngine.__wrap(ret);\n    }\n    /**\n    * @param {Float64Array} bounds\n    * @returns {OptimizationEngine}\n    */\n    with_bounds(bounds) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passArrayF64ToWasm0(bounds, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.optimizationengine_with_bounds(ptr, ptr0, len0);\n        return OptimizationEngine.__wrap(ret);\n    }\n    /**\n    * @param {Float64Array} bounds\n    * @returns {OptimizationEngine}\n    */\n    with_same_bounds(bounds) {\n        const ptr = this.__destroy_into_raw();\n        var ptr0 = passArrayF64ToWasm0(bounds, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.optimizationengine_with_same_bounds(ptr, ptr0, len0);\n        return OptimizationEngine.__wrap(ret);\n    }\n    /**\n    * @returns {number}\n    */\n    dims() {\n        var ret = wasm.optimizationengine_dims(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} n_init\n    * @param {number} n_solve\n    * @param {Float64Array | undefined} f_prior\n    * @returns {SampleData}\n    */\n    get_next_sample(n_init, n_solve, f_prior) {\n        var ptr0 = isLikeNone(f_prior) ? 0 : passArrayF64ToWasm0(f_prior, wasm.__wbindgen_malloc);\n        var len0 = WASM_VECTOR_LEN;\n        var ret = wasm.optimizationengine_get_next_sample(this.ptr, n_init, n_solve, ptr0, len0);\n        return SampleData.__wrap(ret);\n    }\n    /**\n    * @param {number} preference\n    * @param {number} other\n    */\n    add_preference(preference, other) {\n        wasm.optimizationengine_add_preference(this.ptr, preference, other);\n    }\n    /**\n    * @returns {Float64Array}\n    */\n    get_optimal_values() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.optimizationengine_get_optimal_values(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayF64FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 8);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n/**\n*/\nexport class SampleData {\n\n    static __wrap(ptr) {\n        const obj = Object.create(SampleData.prototype);\n        obj.ptr = ptr;\n\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.ptr;\n        this.ptr = 0;\n\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_sampledata_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    get idx1() {\n        var ret = wasm.__wbg_get_sampledata_idx1(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set idx1(arg0) {\n        wasm.__wbg_set_sampledata_idx1(this.ptr, arg0);\n    }\n    /**\n    * @returns {number}\n    */\n    get idx2() {\n        var ret = wasm.__wbg_get_sampledata_idx2(this.ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @param {number} arg0\n    */\n    set idx2(arg0) {\n        wasm.__wbg_set_sampledata_idx2(this.ptr, arg0);\n    }\n    /**\n    * @returns {Float64Array}\n    */\n    sample1() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.sampledata_sample1(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayF64FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 8);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Float64Array}\n    */\n    sample2() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.sampledata_sample2(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            var v0 = getArrayF64FromWasm0(r0, r1).slice();\n            wasm.__wbindgen_free(r0, r1 * 8);\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n    /**\n    * @returns {Float64Array | undefined}\n    */\n    f_prior() {\n        try {\n            const retptr = wasm.__wbindgen_add_to_stack_pointer(-16);\n            wasm.sampledata_f_prior(retptr, this.ptr);\n            var r0 = getInt32Memory0()[retptr / 4 + 0];\n            var r1 = getInt32Memory0()[retptr / 4 + 1];\n            let v0;\n            if (r0 !== 0) {\n                v0 = getArrayF64FromWasm0(r0, r1).slice();\n                wasm.__wbindgen_free(r0, r1 * 8);\n            }\n            return v0;\n        } finally {\n            wasm.__wbindgen_add_to_stack_pointer(16);\n        }\n    }\n}\n\nexport const __wbg_getRandomValues_57e4008f45f0e105 = handleError(function(arg0, arg1) {\n    getObject(arg0).getRandomValues(getObject(arg1));\n});\n\nexport const __wbindgen_object_drop_ref = function(arg0) {\n    takeObject(arg0);\n};\n\nexport const __wbg_randomFillSync_d90848a552cbd666 = handleError(function(arg0, arg1, arg2) {\n    getObject(arg0).randomFillSync(getArrayU8FromWasm0(arg1, arg2));\n});\n\nexport const __wbg_self_f865985e662246aa = handleError(function() {\n    var ret = self.self;\n    return addHeapObject(ret);\n});\n\nexport const __wbg_static_accessor_MODULE_39947eb3fe77895f = function() {\n    var ret = module;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_require_c59851dfa0dc7e78 = handleError(function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).require(getStringFromWasm0(arg1, arg2));\n    return addHeapObject(ret);\n});\n\nexport const __wbg_crypto_bfb05100db79193b = function(arg0) {\n    var ret = getObject(arg0).crypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_msCrypto_f6dddc6ae048b7e2 = function(arg0) {\n    var ret = getObject(arg0).msCrypto;\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_is_undefined = function(arg0) {\n    var ret = getObject(arg0) === undefined;\n    return ret;\n};\n\nexport const __wbg_buffer_e35e010c3ba9f945 = function(arg0) {\n    var ret = getObject(arg0).buffer;\n    return addHeapObject(ret);\n};\n\nexport const __wbg_length_2cfa674c2a529bc1 = function(arg0) {\n    var ret = getObject(arg0).length;\n    return ret;\n};\n\nexport const __wbg_new_139e70222494b1ff = function(arg0) {\n    var ret = new Uint8Array(getObject(arg0));\n    return addHeapObject(ret);\n};\n\nexport const __wbg_set_d771848e3c7935bb = function(arg0, arg1, arg2) {\n    getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n};\n\nexport const __wbg_newwithlength_e0c461e90217842c = function(arg0) {\n    var ret = new Uint8Array(arg0 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbg_subarray_8a52f1c1a11c02a8 = function(arg0, arg1, arg2) {\n    var ret = getObject(arg0).subarray(arg1 >>> 0, arg2 >>> 0);\n    return addHeapObject(ret);\n};\n\nexport const __wbindgen_throw = function(arg0, arg1) {\n    throw new Error(getStringFromWasm0(arg0, arg1));\n};\n\nexport const __wbindgen_memory = function() {\n    var ret = wasm.memory;\n    return addHeapObject(ret);\n};\n\n"],"sourceRoot":""}